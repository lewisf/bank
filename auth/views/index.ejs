<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Plaid Quickstart Example</title>
  <link rel="stylesheet" href="https://threads.plaid.com/threads.css">

  <link rel="stylesheet" type="text/css" href="style.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<body>
  <main class="main">
    <div class="grid">
      <div class="grid__column grid__column--is-twelve-columns">
        <div id="banner" class="everpresent-content">
          <h1 class="everpresent-content__heading">Plaid Quickstart</h1>
          <p id="intro" class="everpresent-content__subheading">
            An example application that outlines an end-to-end integration with Plaid
          </p>
          <p id="steps" class="everpresent-content__subheading">
            Success! You just created an Item by linking your account.
          </p>
        </div>

        <div id="container" class="initial-view">
          <p class="initial-view__description">
            Click the button below to open a list of Institutions. After you select one, youâ€™ll be guided through an
            authentication process. Upon completion, a public_token will be passed back to the server and exchanged for
            access_token.
          </p>

          <button id="link-btn" class="button button--is-primary">Connect with Plaid</button>
        </div>

        <div id="app" class="connected-view">
          <p class="initial-view__description">
            Success! You may now close your browser and continue using the CLI tool.
          </p>
        </div>
      </div>
    </div>
  </main>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
  <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
  <script>
    (function ($) {
      var products = '<%= PLAID_PRODUCTS %>'.split(',');
      if (products.includes('assets')) {
        $('#assets').show();
      }

      var handler = Plaid.create({
        apiVersion: 'v2',
        clientName: 'Plaid Quickstart',
        env: '<%= PLAID_ENV %>',
        product: products,
        key: '<%= PLAID_PUBLIC_KEY %>',
        countryCodes: '<%= PLAID_COUNTRY_CODES %>'.split(','),
        // webhook: 'https://your-domain.tld/plaid-webhook',
        onSuccess: function (public_token) {
          $.post('/get_access_token', {
            public_token: public_token
          }, function (data) {
            $('#container').fadeOut('fast', function () {
              // Hack to close the window now!
              window.open('', '_self').close();

              $('#item_id').text(data.item_id);
              $('#access_token').text(data.access_token);
              $('#intro').hide();
              $('#app, #steps').fadeIn('slow');
            });
          });
        },
      });
      var accessToken = qs('access_token');
      if (accessToken != null && accessToken != '') {
        $.post('/set_access_token', {
          access_token: accessToken
        }, function (data) {
          $('#container').fadeOut('fast', function () {
            $('#item_id').text(data.item_id);
            $('#access_token').text(accessToken);
            $('#intro').hide();
            $('#app, #steps').fadeIn('slow');
          });
        });
      }

      $('#link-btn').on('click', function (e) {
        handler.open();
      });

      $('#get-accounts-btn').on('click', function (e) {
        $.get('/accounts', function (data) {

          $('#get-accounts-data').slideUp(function () {
            if (data.error != null) {
              displayError(this, data.error);
              return;
            }
            var html = '<tr><td><strong>Name</strong></td><td><strong>Balances</strong></td><td><strong>Subtype</strong></td><td><strong>Mask</strong></td></tr>';
            data.accounts.accounts.forEach(function (account, idx) {
              html += '<tr>';
              html += '<td>' + account.name + '</td>';
              html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>';
              html += '<td>' + account.subtype + '</td>';
              html += '<td>' + account.mask + '</td>';
              html += '</tr>';
            });

            $(this).html(html).slideDown();
          });
        });
      });

      $('#get-auth-btn').on('click', function (e) {
        $.get('/auth', function (data) {
          $('#get-auth-data').slideUp(function () {
            if (data.error != null) {
              displayError(this, data.error);
              return;
            }
            var authData = data.auth;
            var isAch = authData.numbers.ach.length > 0;
            var routingLabel = isAch ? 'Routing #' : 'Institution and Branch #';

            var html = '<tr><td><strong>Name</strong></td><td><strong>Balance</strong></td><td><strong>Account #</strong></td><td><strong>' + routingLabel + '</strong></td></tr>';
            if (isAch) {
              authData.numbers.ach.forEach(function (achNumbers, idx) {
                // Find the account associated with this set of account and routing numbers
                var account = authData.accounts.filter(function (a) {
                  return a.account_id == achNumbers.account_id;
                })[0];
                html += '<tr>';
                html += '<td>' + account.name + '</td>';
                html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>';
                html += '<td>' + achNumbers.account + '</td>';
                html += '<td>' + achNumbers.routing + '</td>';
                html += '</tr>';
              });
            } else {
              authData.numbers.eft.forEach(function (eftNumber, idx) {
                // Find the account associated with this set of account and routing numbers
                var account = authData.accounts.filter(function (a) {
                  return a.account_id == eftNumber.account_id;
                })[0];
                html += '<tr>';
                html += '<td>' + account.name + '</td>';
                html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>';
                html += '<td>' + eftNumber.account + '</td>';
                html += '<td>' + eftNumber.institution + ' ' + eftNumber.branch + '</td>';
                html += '</tr>';
              });
            }
            $(this).html(html).slideDown();
          });
        });
      });

      $('#get-identity-btn').on('click', function (e) {
        $.get('/identity', function (data) {
          $('#get-identity-data').slideUp(function () {
            if (data.error != null) {
              displayError(this, data.error);
              return;
            }
            var identityData = data.identity.identity;
            var html = '<tr class="response-row response-row--is-identity"><td><strong>Names</strong></td><td><strong>Emails</strong></td><td><strong>Phone numbers</strong></td><td><strong>Addresses</strong></td></tr><tr class="response-row response-row--is-identity">';
            html += '<td>';
            identityData.names.forEach(function (name, idx) {
              html += name + '<br />';
            });
            html += '</td><td>';
            identityData.emails.forEach(function (email, idx) {
              html += email.data + '<br />';
            });
            html += '</td><td>';
            identityData.phone_numbers.forEach(function (number, idx) {
              html += number.data + '<br />';
            });
            html += '</td><td>';
            identityData.addresses.forEach(function (address, idx) {
              html += address.data.street + '<br />';
              html += address.data.city + ', ' + address.data.state + ' ' + address.data.zip;
            });
            html += '</td></tr>';

            $(this).html(html).slideDown();
          });
        });
      });

      $('#get-item-btn').on('click', function (e) {
        $.get('/item', function (data) {
          $('#get-item-data').slideUp(function () {
            if (data.error) {
              displayError(this, data.error);
            } else {
              var html = '';
              html += '<tr><td>Institution name</td><td>' + data.institution.name + '</td></tr>';
              html += '<tr><td>Billed products</td><td>' + data.item.billed_products.join(', ') + '</td></tr>';
              html += '<tr><td>Available products</td><td>' + data.item.available_products.join(', ') + '</td></tr>';

              $(this).html(html).slideDown();
            }
          });
        });
      });

      $('#get-transactions-btn').on('click', function (e) {
        $.get('/transactions', function (data) {
          if (data.error != null && data.error.error_code != null) {
            // Format the error
            var errorHtml = '<div class="inner"><p>' +
              '<strong>' + data.error.error_code + ':</strong> ' +
              (data.error.display_message == null ? data.error.error_message : data.error.display_message) + '</p></div>';

            if (data.error.error_code === 'PRODUCT_NOT_READY') {
              // Add additional context for `PRODUCT_NOT_READY` errors
              errorHtml += '<div class="inner"><p>Note: The PRODUCT_NOT_READY ' +
                'error is returned when a request to retrieve Transaction data ' +
                'is made before Plaid finishes the <a href="https://plaid.com/' +
                'docs/quickstart/#transaction-data-with-webhooks">initial ' +
                'transaction pull.</a></p></div>';
            }
            // Render the error
            $('#get-transactions-data').slideUp(function () {
              $(this).slideUp(function () {
                $(this).html(errorHtml).slideDown();
              });
            });
          } else {
            $('#get-transactions-data').slideUp(function () {
              var html = '<tr><td><strong>Name</strong></td><td><strong>Amount</strong></td><td><strong>Date</strong></td></tr>';
              data.transactions.transactions.forEach(function (txn, idx) {
                html += '<tr>';
                html += '<td>' + txn.name + '</td>';
                html += '<td>$' + txn.amount + '</td>';
                html += '<td>' + txn.date + '</td>';
                html += '</tr>';
              });

              $(this).slideUp(function () {
                $(this).html(html).slideDown();
              });
            });
          }
        });
      });

      $('#get-balance-btn').on('click', function (e) {
        $.get('/balance', function (data) {
          $('#get-balance-data').slideUp(function () {
            if (data.error != null) {
              displayError(this, data.error);
              return;
            }
            var balanceData = data.balance;
            var html = '<tr><td><strong>Name</strong></td><td><strong>Balance</strong></td><td><strong>Subtype</strong></td><td><strong>Mask</strong></td></tr>';
            balanceData.accounts.forEach(function (account, idx) {
              html += '<tr>';
              html += '<td>' + account.name + '</td>';
              html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>'
              html += '<td>' + account.subtype + '</td>';
              html += '<td>' + account.mask + '</td>';
              html += '</tr>';
            });

            $(this).html(html).slideDown();
          });
        });
      });

      $('#get-assets-btn').on('click', function (e) {
        $.get('/assets', function (data) {
          $('#get-assets-data').slideUp(function () {
            if (data.error != null) {
              displayError(this, data.error);
              return;
            }
            var reportData = data.json;
            var html = `
          <tr>
            <td><strong>Account</strong></td>
            <td><strong>Balance</strong></td>
            <td><strong># Transactions</strong></td>
            <td><strong># Days Available</strong></td>
          </tr>`;
            reportData.items.forEach(function (item, itemIdx) {
              item.accounts.forEach(function (account, accountIdx) {
                html += '<tr>';
                html += '<td>' + account.name + '</td>';
                html += '<td>$' + account.balances.current + '</td>'
                html += '<td>' + account.transactions.length + '</td>';
                html += '<td>' + account.days_available + '</td>';
                html += '</tr>';
              });
            });

            $('#download-assets-pdf-btn')
              .attr('href', `data:application/pdf;base64,${data.pdf}`)
              .attr('download', 'Asset Report.pdf')
              .show();

            $(this).html(html).slideDown();
          });
        });
      });
    })(jQuery);

    function qs(key) {
      key = key.replace(/[*+?^$.\[\]{}()|\\\/]/g, "\\$&"); // escape RegEx meta chars
      var match = location.search.match(new RegExp("[?&]" + key + "=([^&]+)(&|$)"));
      return match && decodeURIComponent(match[1].replace(/\+/g, " "));
    }

    function displayError(element, error) {
      var html = `
    <div class="alert alert-danger">
      <p><strong>Error Code:</strong> ${error.error_code}</p>
      <p><strong>Error Type:</strong> ${error.error_type}</p>
      <p><strong>Error Message:</strong> ${error.display_message == null ? error.error_message : error.display_message}</p>
      <div>Check out our <a href="https://plaid.com/docs/#errors-overview">errors documentation</a> for more information.</div>
    </div>`;
      $(element).html(html).slideDown();
    }
  </script>
</body>

</html>